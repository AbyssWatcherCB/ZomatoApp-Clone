name: build analyze, scan
on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: build
    runs-on: [self-hosted]
    steps:
      - name: checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: BUilding code and analyze with SonarQube
        uses: actions/checkout@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: dependencies install
        run: |
          npm install

      - name: trivy scan
        run: trivy fs .
      - name: docker build push
        run: |
          docker build -t zomato .
          docker tag zomato manlineroot12/zomato:latest
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push manlineroot12/zomato:latest
        env:
          DOCKER_CLI_ACL: 1
  deploy:
    name: deploy app to docker
    needs: build-analyze-scan
    runs-on: [self-hosted]
    steps:
      - name: docker pull
        run: docker pull manlineroot12/zomato:latest
      - name: Image scan
        run: trivy image manlineroot12/zomato:latest > image-trivy-scan.txt
      - name: run docker container
        run: docker run -itd -p 3000:3000 manlineroot12/zomato:latest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Test EKS API connectivity
        run: |
          ENDPOINT=$(aws eks describe-cluster --name test --region ap-south-1 --query "cluster.endpoint" --output text)
          curl -v $ENDPOINT
          
      - name: Debugging info
        run: |
          kubectl version
          kubectl config view
          kubectl cluster-info
          kubectl get nodes

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name test --region ap-south-1
      - name: Apply Kubernetes manifests
        run: |
          for i in {1..5}; do
          kubectl apply -f deployment-service.yml --validate=false && break
          sleep 10
          done
